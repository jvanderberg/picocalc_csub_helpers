' Test program for mandelbrot CSUB
Option Explicit

CSUB mandelbrot integer, integer, integer, integer, integer, integer
 00000000
 4FF0E92D E9DDB08B E9D66514 2C014600
 0600F176 682EDB7E 2E01686D 9D029502
 F1759601 DB750500 6B00E9D1 68526815
 92059504 685B681A 93099208 03C4EB00
 21009303 460B4689 460A468C FB024688
 FBA2F50C FB034703 443D5508 F708FB02
 2802FBA2 FC0CFB03 0847EB08 3703FBA3
 074CEB07 EB681AD3 0F9B0807 0388EA43
 EA4F199A 9B047454 04C5EA44 78A8EB4B
 9C0518E3 7E02FBA2 7C65EB44 F408FB02
 EB0E0FBF EA4F0E44 EA4774AE F111078E
 46710E01 FA0CFB03 FBA39406 EB045403
 EA4F044A EA457595 F1490584 17A40A00
 94079500 4501E9DD BF084555 46D1428C
 9C00D00C E9DD193D EB477406 27000404
 F04F42AF EB750501 DAA80404 E9C09B08
 199EEA00 F1009B09 EB430008 9B030B0B
 D1964283 21002000 E8BDB00B 00008FF0
End CSUB

Const SCALE = 1073741824   ' 1 << 30  (Q2.30)
Const POINTS = 10

Dim result%(POINTS - 1)
Dim startX%
Dim startY%
Dim delta%
Dim i as INTEGER
startX% = -2 * SCALE            ' Q3.28 start X
startY% = 0                     ' Q3.28 start Y
delta%  = SCALE \ 4             ' Q3.28 step (0.25)

mandelbrot result%(0), startX%, startY%, delta%, POINTS, 64

For i% = 0 To POINTS - 1
    Print "Point"; i%; "Iter"; result%(i%)
Next
