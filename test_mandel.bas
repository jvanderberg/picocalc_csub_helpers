' Test program for mandelbrot CSUB
Option Explicit

CSUB mandelbrot integer, integer, integer, integer, integer, integer
 00000000
 4FF0E92D E9DDB08D E9D66516 2C014600
 0600F176 682EDB7D 2E01686D 9D039503
 F1759602 DB740500 9B00E9D1 68526815
 92089507 685B681A 930A9209 03C4EB00
 21009306 460C468A 460F460E 468C460A
 468E460B 18DB9101 FC0CFB03 0E0EEB4E
 CC0EFB02 2302FBA3 44639D07 EA420F12
 19521203 EB459D08 9B017C23 EB671B34
 EB140503 EB4B0309 FB030E05 FBA3F40E
 FB026703 EB07F80C FBA20744 31014502
 0548EB05 EA4F9104 F14A7414 EA440100
 91051405 9501172D 1A04E9DD 5802E9DD
 BF0845D0 EA4F428D EA467616 EA4F1607
 D00D7727 46A81935 EB479D01 950B0505
 F8DF4645 45458038 F1759D0B DBB20500
 30089B04 3C08F840 F8409B05 9B093C04
 0309EB13 9B0A4699 0B0BEB43 42839B06
 2000D197 B00D2100 8FF0E8BD 40000001
End CSUB

Const SCALE  = 268435456  ' 1 << 28
Const POINTS = 10

Dim result%(POINTS - 1)
Dim startX%
Dim startY%
Dim delta%
Dim i as INTEGER
startX% = -2 * SCALE            ' Q3.28 start X
startY% = 0                     ' Q3.28 start Y
delta%  = SCALE \ 4             ' Q3.28 step (0.25)

mandelbrot result%(0), startX%, startY%, delta%, POINTS, 64

For i% = 0 To POINTS - 1
    Print "Point"; i%; "Iter"; result%(i%)
Next
